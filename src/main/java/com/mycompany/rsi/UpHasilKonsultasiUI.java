/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.rsi;

import java.io.File;
import javax.swing.JFileChooser;
import java.sql.*;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.io.FileInputStream;
import java.io.IOException;
import java.awt.Desktop;

/**
 *
 * @author HP
 */
public class UpHasilKonsultasiUI extends javax.swing.JFrame {

    /**
     * Creates new form UpHasilKonsultasiUI
     */
    public UpHasilKonsultasiUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(976, 528));

        jPanel2.setBackground(new java.awt.Color(244, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(34, 184, 185)));
        jPanel2.setPreferredSize(new java.awt.Dimension(976, 512));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/div.u-pos-has.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 32)); // NOI18N
        jLabel2.setText("Ester Howard");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(120, 120, 135));
        jLabel3.setText("30 Tahun");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(34, 184, 185));
        jLabel4.setText("Konsultasi Online");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel5.setText("Tanggal Konsultasi:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel6.setText("Kamis, 10 Agustus 2024");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel7.setText("10.00 AM - 11.00 AM");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel8.setText("Jam                         :");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel9.setText("Sudah berakhir");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel10.setText("Status Sesi              :");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel11.setText("Hasil Konsultasi");

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jButton1.setForeground(new java.awt.Color(51, 51, 51));
        jButton1.setText("+ Unggah Hasil Konsultasi");
        jButton1.setPreferredSize(new java.awt.Dimension(75, 32));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(34, 184, 185));
        jButton3.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Simpan");
        jButton3.setPreferredSize(new java.awt.Dimension(75, 32));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(109, 109, 109)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 756, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(20, 20, 20)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9))
                    .addComponent(jLabel11)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 756, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(121, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)))
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7))
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9))
                .addGap(40, 40, 40)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(80, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 988, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 528, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    JFileChooser fc = new JFileChooser();
    fc.showOpenDialog(null);
    File selectedFile = fc.getSelectedFile(); // Mengambil file yang dipilih

    if (selectedFile != null && selectedFile.getAbsolutePath().endsWith(".pdf")) {
        jButton1.setText(selectedFile.getAbsolutePath());
    } else {
        Aplikasi.dialogUI.showMessage("Error: Format file tidak didukung. Harus PDF.");
    }
    }//GEN-LAST:event_jButton1ActionPerformed
    
//    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {
//    String filePath = jButton1.getText();
//    
//    if (filePath.endsWith(".pdf")) {
//        try {
//            File myFile = new File(filePath);
//            Desktop.getDesktop().open(myFile); // Membuka file PDF
//        } catch (IOException ex) {
//            Aplikasi.dialogUI.showMessage("Gagal membuka file: " + ex.getMessage());
//        }
//    }
//}
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    String filePath = jButton1.getText();
    
    if (filePath.endsWith(".pdf")) {
        if (jButton3.getText().equals("Simpan")) {
            File file = new File(filePath);
            simpanDB(file); // Menyimpan file ke database
            jButton3.setText("Hapus"); // Ubah teks tombol menjadi "Hapus"
        } else if (jButton3.getText().equals("Hapus")) {
            hapusdariDB(); // Menghapus file dari database
            jButton1.setText("+ Unggah Hasil Konsultasi"); // Reset jButton1
            jButton3.setText("Simpan"); // Kembali ke tombol "Simpan"
        }
    } else {
        Aplikasi.dialogUI.showMessage("Error: Silakan unggah file PDF.");
    }
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void simpanDB(File file) {
    Connection con = null;
    PreparedStatement pstmtCekKlien = null;
    PreparedStatement pstmtCari = null;
    PreparedStatement pstmtSimpan = null;
    ResultSet rsCek = null;
    ResultSet rs = null;

    try {
        // Periksa apakah file valid
        if (file == null || !file.exists() || !file.canRead()) {
            Aplikasi.dialogUI.showMessage("File hasil konsultasi tidak valid.");
            return;
        }

        // Ambil data yang diperlukan
        String filePath = jButton1.getText(); // Path file hasil konsultasi
        String namaKlien = jLabel2.getText(); // Nama klien dari label

        // Koneksi ke database
        Aplikasi.database.databaseConnection();
        con = Aplikasi.database.getCon();

        // Cek apakah nama klien ada di tabel KLIEN
        String queryCekKlien = "SELECT * FROM FAMIFY.KLIEN WHERE NAMA_LENGKAP = ?";
        pstmtCekKlien = con.prepareStatement(queryCekKlien);
        pstmtCekKlien.setString(1, namaKlien);
        rsCek = pstmtCekKlien.executeQuery();

        if (!rsCek.next()) {
            Aplikasi.dialogUI.showMessage("Nama klien tidak ditemukan di database.");
            return;
        }

        // Ambil ID_KLIEN
        int idKlien = rsCek.getInt("ID_KLIEN");

        // Ambil ID_RESERVASI berdasarkan ID_KLIEN
        String queryCari = "SELECT ID_RESERVASI FROM FAMIFY.RESERVASI WHERE ID_KLIEN = ?";
        pstmtCari = con.prepareStatement(queryCari);
        pstmtCari.setInt(1, idKlien);
        rs = pstmtCari.executeQuery();

        if (!rs.next()) {
            Aplikasi.dialogUI.showMessage("ID reservasi tidak ditemukan untuk klien ini.");
            return;
        }

        // Ambil ID_RESERVASI
        int idReservasi = rs.getInt("ID_RESERVASI");

        // Simpan hasil konsultasi ke tabel HASIL_KONSULTASI
        String querySimpan = "INSERT INTO FAMIFY.HASIL_KONSULTASI (ID_RESERVASI, CATATAN_KONSULTASI) VALUES (?, ?)";
        pstmtSimpan = con.prepareStatement(querySimpan);

        // Baca file menjadi byte array
        FileInputStream fis = new FileInputStream(file);
        pstmtSimpan.setInt(1, idReservasi);
        pstmtSimpan.setBinaryStream(2, fis, (int) file.length());

        // Eksekusi pernyataan
        int row = pstmtSimpan.executeUpdate();
        fis.close();

        if (row > 0) {
            Aplikasi.dialogUI.showMessage("Hasil konsultasi berhasil disimpan.");
            // Reset UI setelah menyimpan
            jButton1.setText(jButton1.getText());
            jButton3.setText("Hapus");
        } else {
            Aplikasi.dialogUI.showMessage("Gagal menyimpan hasil konsultasi.");
        }

    } catch (SQLException sqlEx) {
        sqlEx.printStackTrace();
        Aplikasi.dialogUI.showMessage("SQL Error: " + sqlEx.getMessage());
    } catch (IOException ioEx) {
        ioEx.printStackTrace();
        Aplikasi.dialogUI.showMessage("Error membaca file: " + ioEx.getMessage());
    } catch (Exception e) {
        e.printStackTrace();
        Aplikasi.dialogUI.showMessage("Gagal menyimpan hasil konsultasi: " + e.getMessage());
    } finally {
        // Tutup resources
        try {
            if (rs != null) rs.close();
            if (rsCek != null) rsCek.close();
            if (pstmtSimpan != null) pstmtSimpan.close();
            if (pstmtCari != null) pstmtCari.close();
            if (pstmtCekKlien != null) pstmtCekKlien.close();
            if (con != null) con.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
}

private void hapusdariDB() {
    try {
        //String filePath = jButton1.getText(); // Mengambil nama file dari jButton1
        String namaKlien = jLabel2.getText();

        // Koneksi ke database
        Aplikasi.database.databaseConnection();
        Connection con = Aplikasi.database.getCon();

        // Ambil ID_HASIL yang sesuai dengan klien berdasarkan nama file
        String queryCari = "SELECT ID_HASIL FROM FAMIFY.HASIL_KONSULTASI H " +
                           "INNER JOIN FAMIFY.RESERVASI R ON H.ID_RESERVASI = R.ID_RESERVASI " +
                           "INNER JOIN FAMIFY.KLIEN K ON R.ID_KLIEN = K.ID_KLIEN " +
                           "WHERE K.NAMA_LENGKAP = ? AND H.CATATAN_KONSULTASI = ?";
        PreparedStatement pstmtCari = con.prepareStatement(queryCari);
        pstmtCari.setString(1, namaKlien);
        //pstmtCari.setString(2, filePath); // Menggunakan filePath untuk mencari ID_HASIL
        ResultSet rs = pstmtCari.executeQuery();

        if (rs.next()) {
            int idHasil = rs.getInt("ID_HASIL");

            // Eksekusi DELETE statement
            String queryHapus = "DELETE FROM FAMIFY.HASIL_KONSULTASI WHERE ID_HASIL = ?";
            PreparedStatement pstmtHapus = con.prepareStatement(queryHapus);
            pstmtHapus.setInt(1, idHasil);
            int row = pstmtHapus.executeUpdate();

            if (row > 0) {
                Aplikasi.dialogUI.showMessage("File hasil konsultasi berhasil dihapus");
                jButton1.setText("+ Unggah Hasil Konsultasi"); // Reset jButton1
                jButton3.setText("Simpan"); // Kembali ke tombol "Simpan"
            } else {
                Aplikasi.dialogUI.showMessage("File hasil konsultasi tidak ditemukan");
            }

            pstmtHapus.close();
        } else {
            Aplikasi.dialogUI.showMessage("ID hasil konsultasi tidak ditemukan untuk klien ini");
        }

        // Tutup resources
        rs.close();
        pstmtCari.close();
        con.close();
    } catch (Exception e) {
        e.printStackTrace();
        Aplikasi.dialogUI.showMessage("Gagal menghapus file hasil konsultasi.");
    }
}


    public void tampilkan() {
        this.setVisible(true);
    }
    
    

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
